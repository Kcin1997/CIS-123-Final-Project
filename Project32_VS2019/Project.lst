Microsoft (R) Macro Assembler Version 14.28.29334.0	    12/03/20 14:26:21
Team1_Final_Reservations.asm				     Page 1 - 1


				; Team 1: Aaron Latanzi, Jason Vergara, Nicholas Lopez
				; Class: CIS123 Assembly Language
				; File Name: Team1_Final_Reservations.asm
				; Creation Date: 11/6/2020
				; Program Description:	This program is implementing the reservation
				;						part of our planned program for the final.
				;						This program has 106 (minus 16 test lines of
				;						lines of code = 90 lines) of code. Will
				;						have more in final version when all parts
				;						are merged.

				INCLUDE Team1Final.inc
			      C ; Include File for Team1_Final_Reservations.asm
			      C 
			      C INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C MakeReservation PROTO,
			      C 	rowSize:DWORD,
			      C 	movieSize:DWORD,
			      C 	invalidPTR:PTR BYTE
			      C 
			      C RemoveReservation PROTO,
			      C 	rowSize:DWORD,
			      C 	movieSize:DWORD,
			      C 	invalidPTR:PTR BYTE
			      C 
			      C GetSeatIndex PROTO,
			      C 	rowSize:DWORD,
			      C 	movieSize:DWORD,
			      C 	invalidPTR:PTR BYTE
			      C 
			      C MainMenu PROTO
			      C 
			      C ShowingsMenu PROTO
			      C 
			      C SelectAdd PROTO
			      C 
 00000000		      C .data
			      C ;--------------------------------------------------------------------------------------
			      C ;Strings for reservation making and clarification.
			      C ;--------------------------------------------------------------------------------------
 00000000 45 6E 74 65 72      C 	makeRowPrompt		BYTE "Enter the row for the seat reservation that you wish to make (A-E): ", 0
	   20 74 68 65 20
	   72 6F 77 20 66
	   6F 72 20 74 68
	   65 20 73 65 61
	   74 20 72 65 73
	   65 72 76 61 74
	   69 6F 6E 20 74
	   68 61 74 20 79
	   6F 75 20 77 69
	   73 68 20 74 6F
	   20 6D 61 6B 65
	   20 28 41 2D 45
	   29 3A 20 00
 00000045 45 6E 74 65 72      C 	makeColPrompt		BYTE "Enter the seat number reservation that you wish to make (1-10): ", 0
	   20 74 68 65 20
	   73 65 61 74 20
	   6E 75 6D 62 65
	   72 20 72 65 73
	   65 72 76 61 74
	   69 6F 6E 20 74
	   68 61 74 20 79
	   6F 75 20 77 69
	   73 68 20 74 6F
	   20 6D 61 6B 65
	   20 28 31 2D 31
	   30 29 3A 20 00
 00000086 45 6E 74 65 72      C 	removeRowPrompt		BYTE "Enter the row for the seat reservation that you wish to remove (A-E): ", 0
	   20 74 68 65 20
	   72 6F 77 20 66
	   6F 72 20 74 68
	   65 20 73 65 61
	   74 20 72 65 73
	   65 72 76 61 74
	   69 6F 6E 20 74
	   68 61 74 20 79
	   6F 75 20 77 69
	   73 68 20 74 6F
	   20 72 65 6D 6F
	   76 65 20 28 41
	   2D 45 29 3A 20
	   00
 000000CD 45 6E 74 65 72      C 	removeColPrompt		BYTE "Enter the seat number reservation that you wish to remove (1-10): ", 0
	   20 74 68 65 20
	   73 65 61 74 20
	   6E 75 6D 62 65
	   72 20 72 65 73
	   65 72 76 61 74
	   69 6F 6E 20 74
	   68 61 74 20 79
	   6F 75 20 77 69
	   73 68 20 74 6F
	   20 72 65 6D 6F
	   76 65 20 28 31
	   2D 31 30 29 3A
	   20 00
 00000110 59 6F 75 72 20      C 	makeSeatSuccess		BYTE "Your seat has been reserved.", 0dh, 0ah, 0
	   73 65 61 74 20
	   68 61 73 20 62
	   65 65 6E 20 72
	   65 73 65 72 76
	   65 64 2E 0D 0A
	   00
 0000012F 54 68 61 74 20      C 	makeSeatFailed		BYTE "That seat is already taken.", 0dh, 0ah, 0
	   73 65 61 74 20
	   69 73 20 61 6C
	   72 65 61 64 79
	   20 74 61 6B 65
	   6E 2E 0D 0A 00
 0000014D 59 6F 75 72 20      C 	removeSeatSuccess	BYTE "Your reservation has been removed.", 0dh, 0ah, 0
	   72 65 73 65 72
	   76 61 74 69 6F
	   6E 20 68 61 73
	   20 62 65 65 6E
	   20 72 65 6D 6F
	   76 65 64 2E 0D
	   0A 00
 00000172 54 68 61 74 20      C 	removeSeatFailed	BYTE "That seat does not have a reservation.", 0dh, 0ah, 0
	   73 65 61 74 20
	   64 6F 65 73 20
	   6E 6F 74 20 68
	   61 76 65 20 61
	   20 72 65 73 65
	   72 76 61 74 69
	   6F 6E 2E 0D 0A
	   00
			      C 
					
 0000019B			.data
				;--------------------------------------------------------------------------------------
				;Table for options to make or remove reservation
				;--------------------------------------------------------------------------------------
 0000019B 31			OptionTable1 BYTE '1'                            
 0000019C  0000010F R		            DWORD SelAdd                      
 000001A0 = 00000005		EntrySize1 = ($ - OptionTable1)                   
 000001A0  32			            BYTE '2'                            
 000001A1  00000124 R		            DWORD SelRem     
 000001A5 = 00000002		CountEntries1 = ($ - OptionTable1) / EntrySize1 
				;--------------------------------------------------------------------------------------
				;Table for options 1-5 for user input
				;--------------------------------------------------------------------------------------
 000001A5 31			OptionTable2 BYTE '1'                            
 000001A6  00000139 R		            DWORD SelectMovie1Time1                        
 000001AA = 00000005		EntrySize2 = ($ - OptionTable2)                   
 000001AA  32			            BYTE '2'                            
 000001AB  00000144 R		            DWORD SelectMovie1Time2                         
 000001AF  33			            BYTE '3'                            
 000001B0  0000014F R		            DWORD SelectMovie2Time1                        
 000001B4  34			            BYTE '4'                            
 000001B5  0000015A R		            DWORD SelectMovie2Time2                        
 000001B9  35						BYTE '5'                                            
 000001BA  00000165 R		            DWORD CancelSelection                       
 000001BE = 00000005		CountEntries2 = ($ - OptionTable2) / EntrySize2    

				;--------------------------------------------------------------------------------------
				;String values displayed for the user menu
				;--------------------------------------------------------------------------------------
 000001BE 31 2E 20 4D 6F	Select1 BYTE "1. Movie 1. Time: 2:15PM", 0dh, 0ah, 0
	   76 69 65 20 31
	   2E 20 54 69 6D
	   65 3A 20 32 3A
	   31 35 50 4D 0D
	   0A 00
 000001D9 32 2E 20 4D 6F	Select2 BYTE "2. Movie 1. Time: 6:30PM", 0dh, 0ah, 0
	   76 69 65 20 31
	   2E 20 54 69 6D
	   65 3A 20 36 3A
	   33 30 50 4D 0D
	   0A 00
 000001F4 33 2E 20 4D 6F	Select3 BYTE "3. Movie 2. Time: 2:15PM", 0dh, 0ah, 0
	   76 69 65 20 32
	   2E 20 54 69 6D
	   65 3A 20 32 3A
	   31 35 50 4D 0D
	   0A 00
 0000020F 34 2E 20 4D 6F	Select4 BYTE "4. Movie 2. Time: 6:30PM", 0dh, 0ah, 0
	   76 69 65 20 32
	   2E 20 54 69 6D
	   65 3A 20 36 3A
	   33 30 50 4D 0D
	   0A 00
 0000022A 35 2E 20 43 61	Select5 BYTE "5. Cancel", 0dh, 0ah, 0
	   6E 63 65 6C 0D
	   0A 00
 00000236 53 65 6C 65 63	StringChoice1 BYTE "Select a movie and time option: ", 0
	   74 20 61 20 6D
	   6F 76 69 65 20
	   61 6E 64 20 74
	   69 6D 65 20 6F
	   70 74 69 6F 6E
	   3A 20 00

 00000257 4D 61 6B 65 20	StringAdd BYTE "Make Reservation Selected", 0dh, 0ah, 0
	   52 65 73 65 72
	   76 61 74 69 6F
	   6E 20 53 65 6C
	   65 63 74 65 64
	   0D 0A 00
 00000273 52 65 6D 6F 76	StringRem BYTE "Remove Reservation Selected", 0dh, 0ah, 0
	   65 20 52 65 73
	   65 72 76 61 74
	   69 6F 6E 20 53
	   65 6C 65 63 74
	   65 64 0D 0A 00
				;--------------------------------------------------------------------------------------
				;Strings displayed after selection made
				;--------------------------------------------------------------------------------------
 00000291 4D 6F 76 69 65	String1 BYTE "Movie 1 at 2:15PM selected", 0dh, 0ah, 0
	   20 31 20 61 74
	   20 32 3A 31 35
	   50 4D 20 73 65
	   6C 65 63 74 65
	   64 0D 0A 00
 000002AE 4D 6F 76 69 65	String2 BYTE "Movie 1 at 6:30PM selected", 0dh, 0ah, 0
	   20 31 20 61 74
	   20 36 3A 33 30
	   50 4D 20 73 65
	   6C 65 63 74 65
	   64 0D 0A 00
 000002CB 4D 6F 76 69 65	String3 BYTE "Movie 2 at 2:15PM selected", 0dh, 0ah, 0
	   20 32 20 61 74
	   20 32 3A 31 35
	   50 4D 20 73 65
	   6C 65 63 74 65
	   64 0D 0A 00
 000002E8 4D 6F 76 69 65	String4	BYTE "Movie 2 at 6:30PM selected", 0dh, 0ah, 0
	   20 32 20 61 74
	   20 36 3A 33 30
	   50 4D 20 73 65
	   6C 65 63 74 65
	   64 0D 0A 00
 00000305 53 65 6C 65 63	SelectCancel	BYTE "Selection cancelled", 0dh, 0ah, 0
	   74 69 6F 6E 20
	   63 61 6E 63 65
	   6C 6C 65 64 0D
	   0A 00
 0000031B 49 6E 76 61 6C	SelectInvalid BYTE "Invalid selection", 0dh, 0ah, 0
	   69 64 20 73 65
	   6C 65 63 74 69
	   6F 6E 0D 0A 00
					
				;--------------------------------------------------------------------------------------
				;3d array for reservations.
				;--------------------------------------------------------------------------------------
 0000032F  0000000A [		reservationsTable	BYTE 10 DUP(0)
	    00
	   ]
 00000339 = 0000000A		RowGapValue = ($ - reservationsTable)
 00000339  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 00000343  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 0000034D  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 00000357  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 00000361 = 00000032		MovieGapValue = ($ - reservationsTable)
 00000361  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 0000036B  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 00000375  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 0000037F  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 00000389  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 00000393  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 0000039D  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 000003A7  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 000003B1  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 000003BB  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 000003C5  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 000003CF  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 000003D9  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 000003E3  0000000A [							BYTE 10 DUP(0)
	    00
	   ]
 000003ED  0000000A [							BYTE 10 DUP(0)
	    00
	   ]


 00000000			.code
 00000000			main PROC
				;--------------------------------------------------------------------------------------
				;Displays the menu choices and asks the user to select an option
				;--------------------------------------------------------------------------------------
 00000000				L1:
						INVOKE MainMenu
 00000000  E8 00000000 E   *	    call   MainMenu

 00000005  E8 00000000 E			call	ReadChar					;Asks for user input
 0000000A  E8 00000000 E			call	WriteChar					;Display user input
 0000000F  E8 00000000 E			call	Crlf						;new line
						
 00000014  2C 31				sub		al, '1'
 00000016  3C 03				cmp		al, 3
 00000018  72 11				jb		IS1
 0000001A  BA 0000031B R				mov		edx, OFFSET SelectInvalid
 0000001F  E8 00000000 E				call	WriteString
 00000024  E8 00000000 E				call	WaitMsg
 00000029  EB D5					jmp		L1
 0000002B					IS1:
 0000002B  04 31				add		al, '1'

 0000002D  BE 0000019B R			mov		esi, OFFSET OptionTable1	;point esi to the table1 address
 00000032  B9 00000002				mov		ecx, CountEntries1			;
 00000037  E8 00000000 E			call	Crlf						;new line

 0000003C					L2:
 0000003C  3A 06					cmp		al, [esi]
 0000003E  75 0C					jne		L3
 00000040  FF 56 01						call	NEAR PTR [esi + 1]
 00000043  53							push	ebx
 00000044  52							push	edx
 00000045  E8 00000000 E					call	Crlf
 0000004A  EB 08						jmp		L4
 0000004C						L3:
 0000004C  81 C6 00000005					add		esi, EntrySize1
 00000052  E2 E8					loop	L2
 00000054					L4:

 00000054  83 F9 00				cmp		ecx, 0
 00000057  0F 84 000000A6			je		L11
 0000005D  50					push	eax

						INVOKE ShowingsMenu
 0000005E  E8 00000000 E   *	    call   ShowingsMenu

 00000063  BA 00000236 R			mov		edx, OFFSET StringChoice1	;StringChoice1 used for output
 00000068  E8 00000000 E			call	WriteString					;Writes the StringChoice1 to output
 0000006D  B8 00000000				mov		eax, 0
 00000072  E8 00000000 E			call	ReadChar					;Asks for user input
 00000077  E8 00000000 E			call	WriteChar					;Display user input
 0000007C  E8 00000000 E			call	Crlf						;new line

 00000081  BE 000001A5 R			mov		esi, OFFSET OptionTable2	;point esi to the table2 address
 00000086  B9 00000005				mov		ecx, CountEntries2			;count of table entries or loop counter

 0000008B					L5:
 0000008B  3A 06					cmp		al, [esi]					;compares characters in table to al
 0000008D  75 0A					jne		L6							;if not matched, continues loop
 0000008F  FF 56 01						call	NEAR PTR [esi+1]			;if matched, call the corresponding procedure
 00000092  E8 00000000 E					call	Crlf						;new line
 00000097  EB 08						jmp		L7							;jump to label 4
 00000099						L6:             
 00000099  81 C6 00000005					add esi, EntrySize2					;Go to the next entry in the table
 0000009F  E2 EA					loop L5									;repeats until ecx=0
 000000A1					L7:

 000000A1  83 F9 00				cmp		ecx, 0
 000000A4  75 14				jne		L8
 000000A6  BA 0000031B R				mov		edx, OFFSET SelectInvalid
 000000AB  E8 00000000 E				call	WriteString
 000000B0  E8 00000000 E				call	WaitMsg
 000000B5  E9 FFFFFF46					jmp		L1
 000000BA					L8:
 000000BA  2C 30				sub		al, '0'
 000000BC  66| 98				cbw
 000000BE  83 F8 04				cmp		eax, 4
 000000C1  0F 87 FFFFFF39			ja		L1

 000000C7  59					pop		ecx
 000000C8  5A					pop		edx
 000000C9  5B					pop		ebx

 000000CA  80 F9 31				cmp		cl, '1'
 000000CD  75 16				jne		L9
							INVOKE	MakeReservation, RowGapValue, MovieGapValue, ADDR SelectInvalid
 000000CF  68 0000031B R   *	    push   OFFSET SelectInvalid
 000000D4  68 00000032	   *	    push   +000000032h
 000000D9  68 0000000A	   *	    push   +00000000Ah
 000000DE  E8 00000000 E   *	    call   MakeReservation
 000000E3  EB 14					jmp		L10
 000000E5					L9:
							INVOKE	RemoveReservation, RowGapValue, MovieGapValue, ADDR SelectInvalid
 000000E5  68 0000031B R   *	    push   OFFSET SelectInvalid
 000000EA  68 00000032	   *	    push   +000000032h
 000000EF  68 0000000A	   *	    push   +00000000Ah
 000000F4  E8 00000000 E   *	    call   RemoveReservation
 000000F9					L10:
 000000F9  E8 00000000 E			call	WaitMsg
 000000FE  E9 FFFFFEFD			jmp L1
					
 00000103				L11:
 00000103  E8 00000000 E	    call WaitMsg						;Waits until user presses a key
					exit
 00000108  6A 00	   *	    push   +000000000h
 0000010A  E8 00000000 E   *	    call   ExitProcess
 0000010F			main ENDP

				;---------------------------------------------------------------------
 0000010F			SelAdd PROC
				;
				; This procedure is what happens when the user selects the first
				; choice in the first menu. Returns the makeRowPrompt offset and size.
				; Receives:	Nothing
				; Returns:	EBX = makeRowPrompt size.
				;			EDX = makeRowPrompt offset.
				;---------------------------------------------------------------------
 0000010F  BA 00000257 R	    mov		edx, OFFSET StringAdd		;StringAdd used for output
 00000114  E8 00000000 E	    call	WriteString					;Writes the StringAdd to output

 00000119  BB 00000045			mov		ebx, SIZEOF makeRowPrompt
 0000011E  BA 00000000 R		mov		edx, OFFSET makeRowPrompt
 00000123  C3			    ret									;returns to main procedure
 00000124			SelAdd ENDP

				;---------------------------------------------------------------------
 00000124			SelRem PROC
				;
				; This procedure is what happens when the user selects the second
				; choice in the first menu. Returns the removeRowPrompt offset and size.
				; Receives:	Nothing
				; Returns:	EBX = removeRowPrompt size.
				;			EDX = removeRowPrompt offset.
				;---------------------------------------------------------------------
 00000124  BA 00000273 R	    mov edx,OFFSET StringRem			;StringRem used for output
 00000129  E8 00000000 E	    call WriteString					;Writes the StringRem to output

 0000012E  BB 00000047			mov		ebx, SIZEOF removeRowPrompt
 00000133  BA 00000086 R		mov		edx, OFFSET removeRowPrompt
 00000138  C3			    ret									;returns to main procedure
 00000139			SelRem ENDP

 00000139			SelectMovie1Time1 PROC
 00000139  BA 00000291 R	    mov edx,OFFSET String1			;String1 used for output
 0000013E  E8 00000000 E	    call WriteString				;Writes the String1 to output
 00000143  C3			    ret								;returns to main procedure
 00000144			SelectMovie1Time1 ENDP

 00000144			SelectMovie1Time2 PROC
 00000144  BA 000002AE R	    mov edx,OFFSET String2			;String2 used for output
 00000149  E8 00000000 E	    call WriteString				;Writes the String2 to output
 0000014E  C3			    ret								;returns to main procedure
 0000014F			SelectMovie1Time2 ENDP

 0000014F			SelectMovie2Time1 PROC
 0000014F  BA 000002CB R	    mov edx,OFFSET String3			;String3 used for output
 00000154  E8 00000000 E	    call WriteString				;Writes the String3 to output
 00000159  C3			    ret								;returns to main procedure
 0000015A			SelectMovie2Time1 ENDP

 0000015A			SelectMovie2Time2 PROC
 0000015A  BA 000002E8 R	    mov edx,OFFSET String4			;String4 used for output
 0000015F  E8 00000000 E	    call WriteString				;Writes the String4 to output
 00000164  C3			    ret								;returns to main procedure
 00000165			SelectMovie2Time2 ENDP

 00000165			CancelSelection PROC
 00000165  BA 00000305 R	    mov edx,OFFSET SelectCancel		;StringGoodbye used for output
 0000016A  E8 00000000 E	    call WriteString				;Writes the StringGoodbye to output
 0000016F  E8 00000000 E		call WaitMsg
 00000174  C3			    ret								;returns to main procedure
 00000175			CancelSelection ENDP


				;---------------------------------------------------------------------
 00000175			GetSeatIndex PROC USES eax ebx edx,
					rowSize:DWORD,
					movieSize:DWORD,
					invalidPtr:PTR BYTE
				;
				; This is a helper procedure for the make and remove reservations
				; procedures.
				; Receives: EAX = movie and time slot
				;			EBX = size of prompt
				;			EDX = prompt for either make or remove reservation
				; Returns:	ESI = index of input seat
				;---------------------------------------------------------------------
 00000175  55		   *	    push   ebp
 00000176  8B EC	   *	    mov    ebp, esp
 00000178  50		   *	    push   eax
 00000179  53		   *	    push   ebx
 0000017A  52		   *	    push   edx
 0000017B  50				push	eax
 0000017C  E8 00000000 E		call	WriteString
 00000181  B8 00000000			mov		eax, 0
 00000186  E8 00000000 E		call	ReadChar
 0000018B  E8 00000000 E		call	WriteChar
 00000190  2C 41			sub		al, 'A'
 00000192  66| 98			cbw
 00000194  E8 00000000 E		call	Crlf

 00000199  3C 05			cmp		al, 5
 0000019B  72 0F			jb		L1
 0000019D  8B 55 10				mov		edx, invalidPtr
 000001A0  E8 00000000 E			call	WriteString
 000001A5  BE FFFFFFFF				mov		esi, -1
 000001AA  EB 3D				jmp		L3
 000001AC				L1:

 000001AC  50				push	eax
 000001AD  03 D3			add		edx, ebx
 000001AF  E8 00000000 E		call	WriteString
 000001B4  B8 00000000			mov		eax, 0
 000001B9  E8 00000000 E		call	ReadDec
 000001BE  48				dec		eax

 000001BF  83 F8 0A			cmp		eax, 10
 000001C2  72 0F			jb		L2
 000001C4  8B 55 10				mov		edx, invalidPtr
 000001C7  E8 00000000 E			call	WriteString
 000001CC  BE FFFFFFFF				mov		esi, -1
 000001D1  EB 16				jmp		L3
 000001D3				L2:
					
 000001D3  8B D8			mov		ebx, eax
 000001D5  58				pop		eax

 000001D6  F7 65 08			mul		rowSize
 000001D9  03 C3			add		eax, ebx

 000001DB  BE 0000032F R		mov		esi, OFFSET reservationsTable
 000001E0  03 F0			add		esi, eax
 000001E2  58				pop		eax
 000001E3  48				dec		eax
 000001E4  F7 65 0C			mul		movieSize
 000001E7  03 F0			add		esi, eax

 000001E9				L3:
					ret
 000001E9  5A		   *	    pop    edx
 000001EA  5B		   *	    pop    ebx
 000001EB  58		   *	    pop    eax
 000001EC  C9		   *	    leave  
 000001ED  C2 000C	   *	    ret    0000Ch
 000001F0			GetSeatIndex ENDP

				END main
Microsoft (R) Macro Assembler Version 14.28.29334.0	    12/03/20 14:26:21
Team1_Final_Reservations.asm				     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000003F7 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001F0 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CancelSelection  . . . . . . . .	P Near	 00000165 _TEXT	Length= 00000010 Public STDCALL
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSeatIndex . . . . . . . . . .	P Near	 00000175 _TEXT	Length= 0000007B Public STDCALL
  rowSize  . . . . . . . . . . .	DWord	 bp + 00000008
  movieSize  . . . . . . . . . .	DWord	 bp + 0000000C
  invalidPtr . . . . . . . . . .	DWord	 bp + 00000010
  L1 . . . . . . . . . . . . . .	L Near	 000001AC _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 000001D3 _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 000001E9 _TEXT	
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MainMenu . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MakeReservation  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RemoveReservation  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SelAdd . . . . . . . . . . . . .	P Near	 0000010F _TEXT	Length= 00000015 Public STDCALL
SelRem . . . . . . . . . . . . .	P Near	 00000124 _TEXT	Length= 00000015 Public STDCALL
SelectAdd  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SelectMovie1Time1  . . . . . . .	P Near	 00000139 _TEXT	Length= 0000000B Public STDCALL
SelectMovie1Time2  . . . . . . .	P Near	 00000144 _TEXT	Length= 0000000B Public STDCALL
SelectMovie2Time1  . . . . . . .	P Near	 0000014F _TEXT	Length= 0000000B Public STDCALL
SelectMovie2Time2  . . . . . . .	P Near	 0000015A _TEXT	Length= 0000000B Public STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowingsMenu . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000010F Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  IS1  . . . . . . . . . . . . .	L Near	 0000002B _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 0000003C _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 0000004C _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 00000054 _TEXT	
  L5 . . . . . . . . . . . . . .	L Near	 0000008B _TEXT	
  L6 . . . . . . . . . . . . . .	L Near	 00000099 _TEXT	
  L7 . . . . . . . . . . . . . .	L Near	 000000A1 _TEXT	
  L8 . . . . . . . . . . . . . .	L Near	 000000BA _TEXT	
  L9 . . . . . . . . . . . . . .	L Near	 000000E5 _TEXT	
  L10  . . . . . . . . . . . . .	L Near	 000000F9 _TEXT	
  L11  . . . . . . . . . . . . .	L Near	 00000103 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CountEntries1  . . . . . . . . .	Number	 00000002h   
CountEntries2  . . . . . . . . .	Number	 00000005h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
EntrySize1 . . . . . . . . . . .	Number	 00000005h   
EntrySize2 . . . . . . . . . . .	Number	 00000005h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
MovieGapValue  . . . . . . . . .	Number	 00000032h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
OptionTable1 . . . . . . . . . .	Byte	 0000019B _DATA	
OptionTable2 . . . . . . . . . .	Byte	 000001A5 _DATA	
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
RowGapValue  . . . . . . . . . .	Number	 0000000Ah   
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
Select1  . . . . . . . . . . . .	Byte	 000001BE _DATA	
Select2  . . . . . . . . . . . .	Byte	 000001D9 _DATA	
Select3  . . . . . . . . . . . .	Byte	 000001F4 _DATA	
Select4  . . . . . . . . . . . .	Byte	 0000020F _DATA	
Select5  . . . . . . . . . . . .	Byte	 0000022A _DATA	
SelectCancel . . . . . . . . . .	Byte	 00000305 _DATA	
SelectInvalid  . . . . . . . . .	Byte	 0000031B _DATA	
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
String1  . . . . . . . . . . . .	Byte	 00000291 _DATA	
String2  . . . . . . . . . . . .	Byte	 000002AE _DATA	
String3  . . . . . . . . . . . .	Byte	 000002CB _DATA	
String4  . . . . . . . . . . . .	Byte	 000002E8 _DATA	
StringAdd  . . . . . . . . . . .	Byte	 00000257 _DATA	
StringChoice1  . . . . . . . . .	Byte	 00000236 _DATA	
StringRem  . . . . . . . . . . .	Byte	 00000273 _DATA	
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
makeColPrompt  . . . . . . . . .	Byte	 00000045 _DATA	
makeRowPrompt  . . . . . . . . .	Byte	 00000000 _DATA	
makeSeatFailed . . . . . . . . .	Byte	 0000012F _DATA	
makeSeatSuccess  . . . . . . . .	Byte	 00000110 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
removeColPrompt  . . . . . . . .	Byte	 000000CD _DATA	
removeRowPrompt  . . . . . . . .	Byte	 00000086 _DATA	
removeSeatFailed . . . . . . . .	Byte	 00000172 _DATA	
removeSeatSuccess  . . . . . . .	Byte	 0000014D _DATA	
reservationsTable  . . . . . . .	Byte	 0000032F _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
