Microsoft (R) Macro Assembler Version 14.27.29112.0	    11/19/20 21:23:11
Team1_Final_Reservations.asm				     Page 1 - 1


				; Author: Jason Vergara
				; Class: CIS123 Assembly Language
				; File Name: Team1_Final_Reservations.asm
				; Creation Date: 11/6/2020
				; Program Description:	This program is implementing the reservation
				;						part of our planned program for the final.
				;						This program has 106 (minus 16 test lines of
				;						lines of code = 90 lines) of code. Will
				;						have more in final version when all parts
				;						are merged.

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data

				;--------------------------------------------------------------------------------------
				;Table for options 1-5 for user input
				;--------------------------------------------------------------------------------------
 00000000 31			OptionTable BYTE '1'                            
 00000001  000000F2 R		            DWORD SelectMovie1Time1                        
 00000005 = 00000005		EntrySize = ($ - OptionTable)                   
 00000005  32			            BYTE '2'                            
 00000006  000000FD R		            DWORD SelectMovie1Time2                         
 0000000A  33			            BYTE '3'                            
 0000000B  00000108 R		            DWORD SelectMovie2Time1                        
 0000000F  34			            BYTE '4'                            
 00000010  00000113 R		            DWORD SelectMovie2Time2                        
 00000014  35						BYTE '5'                            
 00000015  0000011E R		            DWORD RemoveRes  
 00000019  36			            BYTE '6'                            
 0000001A  00000129 R		            DWORD EXIT_PR                       
 0000001E = 00000006		CountEntries = ($ - OptionTable) / EntrySize    

				;--------------------------------------------------------------------------------------
				;String values displayed for the user menu
				;--------------------------------------------------------------------------------------
 0000001E 31 2E 20 4D 6F	Select1 BYTE "1. Movie 1. Time: 2:15PM", 0dh,0ah,0
	   76 69 65 20 31
	   2E 20 54 69 6D
	   65 3A 20 32 3A
	   31 35 50 4D 0D
	   0A 00
 00000039 32 2E 20 4D 6F	Select2 BYTE "2. Movie 1. Time: 6:30PM", 0dh,0ah,0
	   76 69 65 20 31
	   2E 20 54 69 6D
	   65 3A 20 36 3A
	   33 30 50 4D 0D
	   0A 00
 00000054 33 2E 20 4D 6F	Select3 BYTE "3. Movie 2. Time: 2:15PM", 0dh,0ah,0
	   76 69 65 20 32
	   2E 20 54 69 6D
	   65 3A 20 32 3A
	   31 35 50 4D 0D
	   0A 00
 0000006F 34 2E 20 4D 6F	Select4 BYTE "4. Movie 2. Time: 6:30PM", 0dh,0ah,0
	   76 69 65 20 32
	   2E 20 54 69 6D
	   65 3A 20 36 3A
	   33 30 50 4D 0D
	   0A 00
 0000008A 35 2E 20 52 65	Select5 BYTE "5. Remove reservation", 0dh,0ah,0
	   6D 6F 76 65 20
	   72 65 73 65 72
	   76 61 74 69 6F
	   6E 0D 0A 00
 000000A2 36 2E 20 45 78	Select6 BYTE "6. Exit Program", 0dh,0ah,0
	   69 74 20 50 72
	   6F 67 72 61 6D
	   0D 0A 00
 000000B4 53 65 6C 65 63	StringChoice1 BYTE "Select a movie and time option: ", 0
	   74 20 61 20 6D
	   6F 76 69 65 20
	   61 6E 64 20 74
	   69 6D 65 20 6F
	   70 74 69 6F 6E
	   3A 20 00

				;--------------------------------------------------------------------------------------
				;Strings displayed after selection made
				;--------------------------------------------------------------------------------------
 000000D5 4D 6F 76 69 65	String1 BYTE "Movie 1 at 2:15PM selected", 0
	   20 31 20 61 74
	   20 32 3A 31 35
	   50 4D 20 73 65
	   6C 65 63 74 65
	   64 00
 000000F0 4D 6F 76 69 65	String2 BYTE "Movie 1 at 6:30PM selected", 0
	   20 31 20 61 74
	   20 36 3A 33 30
	   50 4D 20 73 65
	   6C 65 63 74 65
	   64 00
 0000010B 4D 6F 76 69 65	String3 BYTE "Movie 2 at 2:15PM selected", 0
	   20 32 20 61 74
	   20 32 3A 31 35
	   50 4D 20 73 65
	   6C 65 63 74 65
	   64 00
 00000126 4D 6F 76 69 65	String4 BYTE "Movie 2 at 6:30PM selected", 0
	   20 32 20 61 74
	   20 36 3A 33 30
	   50 4D 20 73 65
	   6C 65 63 74 65
	   64 00
 00000141 52 65 6D 6F 76	String5 BYTE "Remove Reservation selected", 0
	   65 20 52 65 73
	   65 72 76 61 74
	   69 6F 6E 20 73
	   65 6C 65 63 74
	   65 64 00
 0000015D 47 6F 6F 64 62	StringGoodbye BYTE "Goodbye!", 0
	   79 65 21 00
					

 00000166  00000010 [			movie1Time1Row1		BYTE 16 DUP(0)
	    00
	   ]
 00000176  00000010 [			movie1Time1Row2		BYTE 16 DUP(0)
	    00
	   ]
 00000186  00000010 [			movie1Time2Row1		BYTE 16 DUP(0)
	    00
	   ]
 00000196  00000010 [			movie1Time2Row2		BYTE 16 DUP(0)
	    00
	   ]
 000001A6  00000010 [			movie2Time1Row1		BYTE 16 DUP(0)
	    00
	   ]
 000001B6  00000010 [			movie2Time1Row2		BYTE 16 DUP(0)
	    00
	   ]
 000001C6  00000010 [			movie2Time2Row1		BYTE 16 DUP(0)
	    00
	   ]
 000001D6  00000010 [			movie2Time2Row2		BYTE 16 DUP(0)
	    00
	   ]
 000001E6 10				rowGapValue			BYTE SIZEOF movie1Time1Row1
 000001E7 20				movieGapValue		BYTE SIZEOF movie1Time1Row1 * 2						; 2 = number of rows
 000001E8 45 6E 74 65 72		makeRowPrompt		BYTE "Enter the row for the seat reservation that you wish to make (A-B): ", 0
	   20 74 68 65 20
	   72 6F 77 20 66
	   6F 72 20 74 68
	   65 20 73 65 61
	   74 20 72 65 73
	   65 72 76 61 74
	   69 6F 6E 20 74
	   68 61 74 20 79
	   6F 75 20 77 69
	   73 68 20 74 6F
	   20 6D 61 6B 65
	   20 28 41 2D 42
	   29 3A 20 00
 0000022D 45 6E 74 65 72		makeColPrompt		BYTE "Enter the seat number reservation that you wish to make (1-16): ", 0
	   20 74 68 65 20
	   73 65 61 74 20
	   6E 75 6D 62 65
	   72 20 72 65 73
	   65 72 76 61 74
	   69 6F 6E 20 74
	   68 61 74 20 79
	   6F 75 20 77 69
	   73 68 20 74 6F
	   20 6D 61 6B 65
	   20 28 31 2D 31
	   36 29 3A 20 00
 0000026E 45 6E 74 65 72		removeRowPrompt		BYTE "Enter the row for the seat reservation that you wish to remove (A-B): ", 0
	   20 74 68 65 20
	   72 6F 77 20 66
	   6F 72 20 74 68
	   65 20 73 65 61
	   74 20 72 65 73
	   65 72 76 61 74
	   69 6F 6E 20 74
	   68 61 74 20 79
	   6F 75 20 77 69
	   73 68 20 74 6F
	   20 72 65 6D 6F
	   76 65 20 28 41
	   2D 42 29 3A 20
	   00
 000002B5 45 6E 74 65 72		removeColPrompt		BYTE "Enter the seat number reservation that you wish to remove (1-16): ", 0
	   20 74 68 65 20
	   73 65 61 74 20
	   6E 75 6D 62 65
	   72 20 72 65 73
	   65 72 76 61 74
	   69 6F 6E 20 74
	   68 61 74 20 79
	   6F 75 20 77 69
	   73 68 20 74 6F
	   20 72 65 6D 6F
	   76 65 20 28 31
	   2D 31 36 29 3A
	   20 00
 000002F8 59 6F 75 72 20		makeSeatSuccess		BYTE "Your seat has been reserved.", 0
	   73 65 61 74 20
	   68 61 73 20 62
	   65 65 6E 20 72
	   65 73 65 72 76
	   65 64 2E 00
 00000315 54 68 61 74 20		makeSeatFailed		BYTE "That seat is already taken.", 0
	   73 65 61 74 20
	   69 73 20 61 6C
	   72 65 61 64 79
	   20 74 61 6B 65
	   6E 2E 00
 00000331 59 6F 75 72 20		removeSeatSuccess	BYTE "Your reservation has been removed.", 0
	   72 65 73 65 72
	   76 61 74 69 6F
	   6E 20 68 61 73
	   20 62 65 65 6E
	   20 72 65 6D 6F
	   76 65 64 2E 00
 00000354 54 68 61 74 20		removeSeatFailed	BYTE "That seat does not have a reservation.", 0
	   73 65 61 74 20
	   64 6F 65 73 20
	   6E 6F 74 20 68
	   61 76 65 20 61
	   20 72 65 73 65
	   72 76 61 74 69
	   6F 6E 2E 00

 00000000			.code
 00000000			main PROC
				;--------------------------------------------------------------------------------------
				;Displays the menu choices and asks the user to select an option
				;--------------------------------------------------------------------------------------
 00000000  BA 0000001E R	    mov edx, OFFSET Select1         ;String1 used for output
 00000005  E8 00000000 E	    call WriteString                ;Writes the String1 to output
 0000000A  BA 00000039 R	    mov edx, OFFSET Select2         ;String2 used for output
 0000000F  E8 00000000 E	    call WriteString                ;Writes the String2 to output
 00000014  BA 00000054 R	    mov edx, OFFSET Select3         ;String3 used for output
 00000019  E8 00000000 E	    call WriteString                ;Writes the String3 to output
 0000001E  BA 0000006F R	    mov edx, OFFSET Select4         ;String4 used for output
 00000023  E8 00000000 E	    call WriteString                ;Writes the String4 to output
 00000028  BA 0000008A R	    mov edx, OFFSET Select5         ;String5 used for output
 0000002D  E8 00000000 E	    call WriteString                ;Writes the String5 to output
 00000032  BA 000000A2 R		mov edx, OFFSET Select6         ;StringGoodbye used for output
 00000037  E8 00000000 E	    call WriteString                ;Writes the String6 to output
 0000003C  BA 000000B4 R	    mov edx, OFFSET StringChoice1   ;StringChoice1 used for output
 00000041  E8 00000000 E	    call WriteString                ;Writes the StringChoice1 to output
 00000046  E8 00000000 E	    call ReadChar                   ;Asks for user input
 0000004B  E8 00000000 E	    call WriteChar                  ;Display user input
 00000050  E8 00000000 E		call Crlf                       ;new line
 00000055  BE 00000000 R	    mov esi,OFFSET OptionTable      ;point esi to the table address
 0000005A  B9 00000006		    mov ecx,CountEntries            ;count of table entries or loop counter
 0000005F  E8 00000000 E	    call Crlf                       ;new line

					.if al == '5'
 00000064  3C 35	   *	    cmp    al, '5'
 00000066  75 07	   *	    jne    @C0001
 00000068  B8 00000005				mov eax, 5
 0000006D  EB 68				jmp	L6
					.endif
 0000006F		   *@C0001:

 0000006F			L1:
 0000006F  3A 06		    cmp al,[esi]                    ;compares characters in table to al
 00000071  75 0A		    jne L2                          ;if not matched, continues loop
 00000073  FF 56 01		    call NEAR PTR [esi+1]           ;if matched, call the corresponding procedure
 00000076  E8 00000000 E	    call Crlf                       ;new line
 0000007B  EB 08		    jmp L3                          ;jump to label 3
 0000007D			L2:             
 0000007D  81 C6 00000005	    add esi,EntrySize               ;Go to the next entry in the table
 00000083  E2 EA		loop L1								;repeats until ecx=0

 00000085			L3:
					.if al == '1'
 00000085  3C 31	   *	    cmp    al, '1'
 00000087  75 09	   *	    jne    @C0003
 00000089  B8 00000001				mov	eax, 1						; Pass the choice from the menu (ex: movie1time1 = 1, movie1time2 = 2, movie2time1 = 3, movie2time2 = 4)
 0000008E  EB 34				jmp	L5
					.elseif al == '2'
 00000090  EB 32	   *	    jmp    @C0005
 00000092		   *@C0003:
 00000092  3C 32	   *	    cmp    al, '2'
 00000094  75 09	   *	    jne    @C0006
 00000096  B8 00000002				mov	eax, 2
 0000009B  EB 27				jmp	L5
					.elseif al == '3'
 0000009D  EB 25	   *	    jmp    @C0008
 0000009F		   *@C0006:
 0000009F  3C 33	   *	    cmp    al, '3'
 000000A1  75 09	   *	    jne    @C0009
 000000A3  B8 00000003				mov	eax, 3
 000000A8  EB 1A				jmp	L5
					.elseif al == '4'
 000000AA  EB 18	   *	    jmp    @C000B
 000000AC		   *@C0009:
 000000AC  3C 34	   *	    cmp    al, '4'
 000000AE  75 09	   *	    jne    @C000C
 000000B0  B8 00000004				mov	eax, 4
 000000B5  EB 0D				jmp	L5
					.elseif al == '6'
 000000B7  EB 0B	   *	    jmp    @C000E
 000000B9		   *@C000C:
 000000B9  3C 36	   *	    cmp    al, '6'
 000000BB  75 07	   *	    jne    @C000F
 000000BD  B8 00000006				mov	eax, 6
 000000C2  EB 22				jmp	L7
					.endif
 000000C4		   *@C000F:
 000000C4		   *@C000E:
 000000C4		   *@C000B:
 000000C4		   *@C0008:
 000000C4		   *@C0005:

 000000C4			L5:
 000000C4  BB 00000045			mov		ebx, SIZEOF makeRowPrompt	; Pass the size of the makerowprompt string
 000000C9  BA 000001E8 R		mov		edx, OFFSET makeRowPrompt	; Pass the offset to the makerowprompt string
 000000CE  2C 30			sub		al, '0'
 000000D0  E8 0000005F			call	MakeReservation
 000000D5  EB 0F			jmp L7

 000000D7			L6:
 000000D7  BB 00000047			mov		ebx, SIZEOF removeRowPrompt
 000000DC  BA 0000026E R		mov		edx, OFFSET removeRowPrompt
 000000E1  E8 00000084			call	RemoveReservation


 000000E6			L7:
 000000E6  E8 00000000 E	    call WaitMsg                    ;Waits until user presses a key

					exit
 000000EB  6A 00	   *	    push   +000000000h
 000000ED  E8 00000000 E   *	    call   ExitProcess
 000000F2			main ENDP

 000000F2			SelectMovie1Time1 PROC
 000000F2  BA 000000D5 R	    mov edx,OFFSET String1			;String1 used for output
 000000F7  E8 00000000 E	    call WriteString                ;Writes the String1 to output
 000000FC  C3			    ret                             ;returns to main procedure
 000000FD			SelectMovie1Time1 ENDP

 000000FD			SelectMovie1Time2 PROC
 000000FD  BA 000000F0 R	    mov edx,OFFSET String2			;String2 used for output
 00000102  E8 00000000 E	    call WriteString                ;Writes the String2 to output
 00000107  C3			    ret                             ;returns to main procedure
 00000108			SelectMovie1Time2 ENDP

 00000108			SelectMovie2Time1 PROC
 00000108  BA 0000010B R	    mov edx,OFFSET String3			;String3 used for output
 0000010D  E8 00000000 E	    call WriteString                ;Writes the String3 to output
 00000112  C3			    ret                             ;returns to main procedure
 00000113			SelectMovie2Time1 ENDP

 00000113			SelectMovie2Time2 PROC
 00000113  BA 00000126 R	    mov edx,OFFSET String4			;String4 used for output
 00000118  E8 00000000 E	    call WriteString                ;Writes the String4 to output
 0000011D  C3			    ret                             ;returns to main procedure
 0000011E			SelectMovie2Time2 ENDP

 0000011E			RemoveRes PROC
 0000011E  BA 00000141 R	    mov edx,OFFSET String5			;String5 used for output
 00000123  E8 00000000 E	    call WriteString                ;Writes the String5 to output
 00000128  C3				ret                             ;returns to main procedure
 00000129			RemoveRes ENDP

 00000129			EXIT_PR PROC
 00000129  BA 0000015D R	    mov edx,OFFSET StringGoodbye    ;StringGoodbye used for output
 0000012E  E8 00000000 E	    call WriteString                ;Writes the StringGoodbye to output
 00000133  C3			    ret                             ;returns to main procedure
 00000134			EXIT_PR ENDP


				;---------------------------------------------------------------------
 00000134			MakeReservation PROC USES ebx edx esi
				;
				; This procedure reads input from user to determine if their seat
				; reservation is already taken. If not, assign them that seat, and
				; marks in the 2d array that the seat is taken.
				; Receives:	EAX = the movie and time slot
				;			EBX = size of prompt
				;			EDX = prompt for make reservation
				; Returns:	AL = 1, if the seat has been reserved
				;---------------------------------------------------------------------
 00000134  53		   *	    push   ebx
 00000135  52		   *	    push   edx
 00000136  56		   *	    push   esi
 00000137  E8 00000060			call	GetSeatIndex

 0000013C  8A 06			mov		al, [esi]
 0000013E  3C 00			cmp		al, 0
 00000140  74 0C			je		L1
 00000142  B8 00000000				mov		eax, 0
 00000147  BA 00000315 R			mov		edx, OFFSET makeSeatFailed
 0000014C  EB 09				jmp		L2
 0000014E				L1:
 0000014E  FE C0				inc		al
 00000150  88 06				mov		[esi], al
 00000152  BA 000002F8 R			mov		edx, OFFSET makeSeatSuccess
 00000157				L2:

 00000157  E8 00000000 E		call	WriteString
 0000015C  E8 00000000 E		call	Crlf
 00000161  E8 00000000 E		call	Crlf
					ret
 00000166  5E		   *	    pop    esi
 00000167  5A		   *	    pop    edx
 00000168  5B		   *	    pop    ebx
 00000169  C3		   *	    ret    00000h
 0000016A			MakeReservation ENDP

				;---------------------------------------------------------------------
 0000016A			RemoveReservation PROC USES ebx edx esi
				;
				; This procedure reads input from the user to determine if a seat
				; is indeed reserved in order to be able to remove the seat
				; reservation.
				; Receives:	EAX = the movie and time slot
				;			EBX = size of prompt
				;			EDX = prompt for remove reservation
				; Returns:	AL = 1, if reservation was removed
				;---------------------------------------------------------------------
 0000016A  53		   *	    push   ebx
 0000016B  52		   *	    push   edx
 0000016C  56		   *	    push   esi
 0000016D  E8 0000002A			call	GetSeatIndex

 00000172  8A 06			mov		al, [esi]
 00000174  3C 00			cmp		al, 0
 00000176  75 07			jne		L1
 00000178  BA 00000354 R			mov		edx, OFFSET removeSeatFailed
 0000017D  EB 0A				jmp		L2
 0000017F				L1:
 0000017F  FE C8				dec		al
 00000181  88 06				mov		[esi], al
 00000183  40					inc		eax
 00000184  BA 00000331 R			mov		edx, OFFSET removeSeatSuccess
 00000189				L2:

 00000189  E8 00000000 E		call	WriteString
 0000018E  E8 00000000 E		call	Crlf
 00000193  E8 00000000 E		call	Crlf
					ret
 00000198  5E		   *	    pop    esi
 00000199  5A		   *	    pop    edx
 0000019A  5B		   *	    pop    ebx
 0000019B  C3		   *	    ret    00000h
 0000019C			RemoveReservation ENDP

				;---------------------------------------------------------------------
 0000019C			GetSeatIndex PROC USES eax ebx edx
				;
				; This is a helper procedure for the make and remove reservations
				; procedures.
				; Receives: EAX = movie and time slot
				;			EBX = size of prompt
				;			EDX = prompt for either make or remove reservation
				; Returns:	ESI = index of input seat
				;---------------------------------------------------------------------
 0000019C  50		   *	    push   eax
 0000019D  53		   *	    push   ebx
 0000019E  52		   *	    push   edx
 0000019F  50				push	eax
 000001A0  E8 00000000 E		call	WriteString
 000001A5  B8 00000000			mov		eax, 0
 000001AA  E8 00000000 E		call	ReadChar
 000001AF  E8 00000000 E		call	WriteChar
 000001B4  2C 41			sub		al, 'A'
 000001B6  66| 98			cbw
 000001B8  E8 00000000 E		call	Crlf

 000001BD  50				push	eax
 000001BE  03 D3			add		edx, ebx
 000001C0  E8 00000000 E		call	WriteString
 000001C5  B8 00000000			mov		eax, 0
 000001CA  E8 00000000 E		call	ReadDec
 000001CF  48				dec		eax
					
 000001D0  BB 00000000			mov		ebx, 0
 000001D5  8A D8			mov		bl, al
 000001D7  58				pop		eax

 000001D8  F6 25 000001E6 R		mul		rowGapValue
 000001DE  03 C3			add		eax, ebx

 000001E0  BE 00000166 R		mov		esi, OFFSET movie1Time1Row1
 000001E5  03 F0			add		esi, eax
 000001E7  58				pop		eax
 000001E8  48				dec		eax
 000001E9  F6 25 000001E7 R		mul		movieGapValue
 000001EF  03 F0			add		esi, eax

					ret
 000001F1  5A		   *	    pop    edx
 000001F2  5B		   *	    pop    ebx
 000001F3  58		   *	    pop    eax
 000001F4  C3		   *	    ret    00000h
 000001F5			GetSeatIndex ENDP

				END main
Microsoft (R) Macro Assembler Version 14.27.29112.0	    11/19/20 21:23:11
Team1_Final_Reservations.asm				     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000037B Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001F5 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EXIT_PR  . . . . . . . . . . . .	P Near	 00000129 _TEXT	Length= 0000000B Public STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSeatIndex . . . . . . . . . .	P Near	 0000019C _TEXT	Length= 00000059 Public STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MakeReservation  . . . . . . . .	P Near	 00000134 _TEXT	Length= 00000036 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000014E _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000157 _TEXT	
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RemoveReservation  . . . . . . .	P Near	 0000016A _TEXT	Length= 00000032 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000017F _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000189 _TEXT	
RemoveRes  . . . . . . . . . . .	P Near	 0000011E _TEXT	Length= 0000000B Public STDCALL
SelectMovie1Time1  . . . . . . .	P Near	 000000F2 _TEXT	Length= 0000000B Public STDCALL
SelectMovie1Time2  . . . . . . .	P Near	 000000FD _TEXT	Length= 0000000B Public STDCALL
SelectMovie2Time1  . . . . . . .	P Near	 00000108 _TEXT	Length= 0000000B Public STDCALL
SelectMovie2Time2  . . . . . . .	P Near	 00000113 _TEXT	Length= 0000000B Public STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000F2 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000006F _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 0000007D _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 00000085 _TEXT	
  L5 . . . . . . . . . . . . . .	L Near	 000000C4 _TEXT	
  L6 . . . . . . . . . . . . . .	L Near	 000000D7 _TEXT	
  L7 . . . . . . . . . . . . . .	L Near	 000000E6 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CountEntries . . . . . . . . . .	Number	 00000006h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
EntrySize  . . . . . . . . . . .	Number	 00000005h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
OptionTable  . . . . . . . . . .	Byte	 00000000 _DATA	
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
Select1  . . . . . . . . . . . .	Byte	 0000001E _DATA	
Select2  . . . . . . . . . . . .	Byte	 00000039 _DATA	
Select3  . . . . . . . . . . . .	Byte	 00000054 _DATA	
Select4  . . . . . . . . . . . .	Byte	 0000006F _DATA	
Select5  . . . . . . . . . . . .	Byte	 0000008A _DATA	
Select6  . . . . . . . . . . . .	Byte	 000000A2 _DATA	
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
String1  . . . . . . . . . . . .	Byte	 000000D5 _DATA	
String2  . . . . . . . . . . . .	Byte	 000000F0 _DATA	
String3  . . . . . . . . . . . .	Byte	 0000010B _DATA	
String4  . . . . . . . . . . . .	Byte	 00000126 _DATA	
String5  . . . . . . . . . . . .	Byte	 00000141 _DATA	
StringChoice1  . . . . . . . . .	Byte	 000000B4 _DATA	
StringGoodbye  . . . . . . . . .	Byte	 0000015D _DATA	
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
makeColPrompt  . . . . . . . . .	Byte	 0000022D _DATA	
makeRowPrompt  . . . . . . . . .	Byte	 000001E8 _DATA	
makeSeatFailed . . . . . . . . .	Byte	 00000315 _DATA	
makeSeatSuccess  . . . . . . . .	Byte	 000002F8 _DATA	
movie1Time1Row1  . . . . . . . .	Byte	 00000166 _DATA	
movie1Time1Row2  . . . . . . . .	Byte	 00000176 _DATA	
movie1Time2Row1  . . . . . . . .	Byte	 00000186 _DATA	
movie1Time2Row2  . . . . . . . .	Byte	 00000196 _DATA	
movie2Time1Row1  . . . . . . . .	Byte	 000001A6 _DATA	
movie2Time1Row2  . . . . . . . .	Byte	 000001B6 _DATA	
movie2Time2Row1  . . . . . . . .	Byte	 000001C6 _DATA	
movie2Time2Row2  . . . . . . . .	Byte	 000001D6 _DATA	
movieGapValue  . . . . . . . . .	Byte	 000001E7 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
removeColPrompt  . . . . . . . .	Byte	 000002B5 _DATA	
removeRowPrompt  . . . . . . . .	Byte	 0000026E _DATA	
removeSeatFailed . . . . . . . .	Byte	 00000354 _DATA	
removeSeatSuccess  . . . . . . .	Byte	 00000331 _DATA	
rowGapValue  . . . . . . . . . .	Byte	 000001E6 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
